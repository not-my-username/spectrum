extends Node3D

var all_colors = [
	0x87cdedff,
0x0165fcff,
0x41fdfeff,
0x1974d2ff,
0x24a0edff,
0x1ac1ddff,
0xc4fff7ff,
0x7df9ffff,
0x3f00ffff,
0x00fdffff,
0x1166ffff,
0x15f2fdff,
0x04d9ffff,
0x0203e2ff,
0x0044ffff,
0x00bffeff,
0x010fccff,
0xd0ff14ff,
0x8cff9eff,
0xcfff00ff,
0x66ff00ff,
0x87fd05ff,
0x9dff00ff,
0xc1f80aff,
0x21fc0dff,
0x08ff08ff,
0x00ff00ff,
0xaeff6eff,
0x53fe5cff,
0x56fca2ff,
0x4efd54ff,
0xaaff32ff,
0x7af9abff,
0xa0d404ff,
0x00fa9aff,
0x45cea2ff,
0x39ff14ff,
0x77dd77ff,
0x19a700ff,
0x68e52fff,
0x7ded17ff,
0x00f900ff,
0x00ff7cff,
0x06c2acff,
0x0add08ff,
0x2fef10ff,
0xfea051ff,
0xfe6700ff,
0xff7034ff,
0xffc82aff,
0xff7124ff,
0xeb5030ff,
0xed872dff,
0xfd6f3bff,
0xffa600ff,
0xee8800ff,
0xff7f50ff,
0xffa812ff,
0xfc642dff,
0xff3503ff,
0xffcf00ff,
0xeb6123ff,
0xff8d28ff,
0xffa62bff,
0xf08300ff,
0xffa368ff,
0xff9889ff,
0xff9933ff,
0xff5721ff,
0xffa500ff,
0xff7f00ff,
0xffa000ff,
0xff6f52ff,
0xfa5b3dff,
0xfc845dff,
0xff7518ff,
0xfc9e21ff,
0xff6600ff,
0xff9300ff,
0xff7420ff,
0xff5f00ff,
0xfe01b1ff,
0xff85ffff,
0xff7fa7ff,
0xd90166ff,
0xf4bfffff,
0xff0490ff,
0xfe1493ff,
0xfd3f92ff,
0xee6d8aff,
0xff00ccff,
0xff028dff,
0xffb3deff,
0xff00ffff,
0xff2febff,
0xfe4164ff,
0xfe019aff,
0xff66ffff,
0xff1476ff,
0xf62681ff,
0xd648d7ff,
0xdf4ec8ff,
0xe25098ff,
0xf6688eff,
0xca2c92ff,
0xfe02a2ff,
0xff1caeff,
0xff6ffcff,
0xff878dff,
0xf06fffff,
0xfb5ffcff,
0xbe03fdff,
0xad0afdff,
0x6600ffff,
0xbf00ffff,
0x8f00f1ff,
0xcb00f5ff,
0xb56edcff,
0xbc13feff,
0xe0b0ffff,
0x65318eff,
0xb80ce3ff,
0x9f00ffff,
0xff000dff,
0xe30022ff,
0xf7022aff,
0xf2013fff,
0xff4040ff,
0xe60000ff,
0xd01c1fff,
0xfe0002ff,
0xff5555ff,
0xeb5406ff,
0xfd5956ff,
0xf1172fff,
0xcf1020ff,
0xbc2731ff,
0xfc2847ff,
0xff073aff,
0xff1b2dff,
0xfe4401ff,
0xf43605ff,
0xf10c45ff,
0xd22d1dff,
0xb0054bff,
0xdd1133ff,
0xb00149ff,
0xe30b5dff,
0xff0000ff,
0xee204dff,
0xff3f34ff,
0xfa2a55ff,
0xe40078ff,
0xfe2713ff,
0xf8481cff,
0xfe2c54ff,
0xca0147ff,
0xff2400ff,
0xbb1237ff,
0xd73c26ff,
0xff1111ff,
0xec2d01ff,
0xb21807ff,
0xfd0d35ff,
0xbf1932ff,
0xc6174eff,
0xef3939ff,
0xcc0033ff,
0xff006cff,
0xf70d1aff,
0xe56024ff,
0xeddd59ff,
0xfffc79ff,
0xfffd01ff,
0xffff81ff,
0xfff600ff,
0xfcfc5dff,
0xfcd116ff,
0xffff31ff,
0xfedf08ff,
0xffff33ff,
0xfffc00ff,
0xffd700ff,
0xfff700ff,
0xf1ff62ff,
0xf0e681ff,
0xcfff04ff,
0xd1e231ff,
0xffc324ff,
0xfada50ff,
0xeed202ff,
0xf4c430ff,
0xffd800ff,
0xf7b718ff,
0xe8ff2aff,
0xffdc41ff,
0xdfff4fff,
0xffe302ff,
0xf7c114ff,
0xffff00ff,
0xffef00ff,
0xffff11ff,
0xffcc3aff,
0xfcfd74ff,
0xfff000ff,
0xffff14ff,
]
var rng = RandomNumberGenerator.new()
var color 
func _ready():
	pass


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
	
func change():
	self.visible = true
	for N in self.get_children():
		color = all_colors[rng.randi_range(0, 205)]
		print(all_colors[rng.randi_range(0, 205)])
		print(color)
		N.light_color = Color.hex(color)
		print(color)		
		N.get_children()[0].light_color = Color.hex(color)
		print(color)
		print()

